name: Deploy to Cloudflare Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # publish.py PHẢI ghi thẳng vào _public/blog/
      - name: Build site with publish.py (writes to _public/blog)
        env:
          BASE_URL: /blog/
        run: |
          set -euxo pipefail
          python publish.py
          echo "== DEBUG: list _public/blog =="
          (find _public/blog -maxdepth 2 -type f | sed 's/^/  /') || true

      # KHÔNG XÓA _public! Chỉ thêm phần bổ sung
      - name: Assemble static extras (do NOT delete _public)
        run: |
          set -euxo pipefail
          test -f _public/blog/index.html || (echo "ERROR: _public/blog/index.html not found; check publish.py" && exit 1)

          # Copy coming-soon nếu có
          if [ -d coming-soon ]; then
            mkdir -p _public/coming-soon
            rsync -a coming-soon/ _public/coming-soon/
          fi

          # Copy contact nếu có
          if [ -d contact ]; then
            mkdir -p _public/contact
            rsync -a contact/ _public/contact/
          fi

          # Root -> /coming-soon/ (phục vụ domain apex)
          printf '%s\n' '<meta http-equiv="refresh" content="0;url=/coming-soon/">' > _public/index.html

          echo "== TREE _public =="
          find _public -maxdepth 3 -print | sed 's/^/  /'

      - name: Upload _public artifact (debug)
        uses: actions/upload-artifact@v4
        with:
          name: public
          path: _public

      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          projectName: cachemissed
          directory: _public
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
